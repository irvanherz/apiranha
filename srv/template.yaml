AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Parameters:
  JwtSecret:
    Type: String
    Description: "JWT Secret for signing tokens"

Globals:
  Function:
    CodeUri: ./
    Timeout: 10
    Runtime: nodejs20.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        JWT_SECRET: !Ref JwtSecret
Resources:
  RegisterFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.register
      Events:
        Register:
          Type: Api 
          Properties:
            Path: /auth/register
            Method: post
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - auth/handler.ts
  LoginFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.login
      Events:
        Login:
          Type: Api 
          Properties:
            Path: /auth/login
            Method: post
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - auth/handler.ts
# # USER
  CreateUserFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.createUser
      Events:
        CreateUser:
          Type: Api 
          Properties:
            Path: /users
            Method: post
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - user/handler.ts
  FindUsersFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.findUsers
      Events:
        FindUsers:
          Type: Api 
          Properties:
            Path: /users
            Method: get
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - user/handler.ts
  FindUserFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.findUser
      Events:
        FindUser:
          Type: Api 
          Properties:
            Path: /users/{id}
            Method: get
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - user/handler.ts
  UpdateUserFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.updateUser
      Events:
        UpdateUser:
          Type: Api 
          Properties:
            Path: /users/{id}
            Method: put
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - user/handler.ts
  DeleteUserFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.deleteUser
      Events:
        DeleteUser:
          Type: Api 
          Properties:
            Path: /users/{id}
            Method: delete
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - user/handler.ts
# API KEY
  CreateApiKeyFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.createApiKey
      Events:
        CreateApiKey:
          Type: Api 
          Properties:
            Path: /api-keys
            Method: post
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - api-key/handler.ts
  FindApiKeyFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.findApiKey
      Events:
        FindApiKey:
          Type: Api 
          Properties:
            Path: /api-keys/{id}
            Method: get
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - api-key/handler.ts
  FindApiKeysFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.findApiKeys
      Events:
        FindApiKeys:
          Type: Api 
          Properties:
            Path: /api-keys
            Method: get
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - api-key/handler.ts
  FindUserApiKeysFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.findUserApiKeys
      Events:
        FindUserApiKeys:
          Type: Api 
          Properties:
            Path: /users/{id}/api-keys
            Method: get
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - api-key/handler.ts
  UpdateApiKeyFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.updateApiKey
      Events:
        UpdateApiKey:
          Type: Api 
          Properties:
            Path: /api-keys/{id}
            Method: put
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - api-key/handler.ts
  DeleteApiKeyFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: handler.deleteApiKey
      Events:
        DeleteApiKey:
          Type: Api 
          Properties:
            Path: /api-keys/{id}
            Method: delete
      Policies: 
      - AmazonDynamoDBFullAccess
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - api-key/handler.ts